;; Global WM Settings

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
; Used for top aligned bars
margin-bottom = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
; Used for bottom aligned bars
margin-top = 0

;; Bar Settings

[bar/main]
; Use either of the following command to list available outputs:
; If unspecified, the application will pick the first one it finds.
; $ polybar -m | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
monitor =

; Use the specified monitor as a fallback if the main one is not found.
monitor-fallback =

; Require the monitor to be in connected state
; XRandR sometimes reports my monitor as being disconnected (when in use)
monitor-strict = false

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block
; When false, the center position will be based on the size of the other blocks.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 107%
height = 17

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = #1B2224

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${color.fg}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
;;background-0 = 

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius-top = 0.0
radius-bottom = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
;;overline-size = 0
;;overline-color = ${color.ac}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed withing this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
border-bottom-size = 1
border-color = ${color.ac}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 2

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin-left = 2
module-margin-right = 2

font-0 = "Noto Sans:size=9:weight:medium;2"
font-1 = "Iosevka Nerd Font:size=16;3"
font-2 = "Feather:size=10;2"
font-3 = "Feather:size=12;3"
font-4 = "MesloLGS NF:size=10;3"

;modules-left = title
modules-left = polywins
modules-center = xmonad
modules-right = workspaces pulseaudio notification date

; the separator will be inserted between the output of each module
separator =

; this value is used to add extra spacing between elements
; @deprecated: this parameter will be removed in an upcoming version
spacing = 0

; opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; value to be used to set the wm_name atom
; if the value is empty or undefined, the atom value
; will be created from the following template: polybar-[bar]_[monitor]
; note: the placeholders are not available for custom values
wm-name = 

; locale used to localize various module data (e.g. date)
; expects a valid libc locale, for example: sv_se.utf-8
locale = 

; position of the system tray window
; if empty or undefined, tray support will be disabled
; note: a center aligned tray will cover center aligned modules
;
; available positions:
;   left
;   center
;   right
;   none
tray-position = none

; if true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; tray icon max size
tray-maxsize = 16

; deprecated! since 3.3.0 the tray always uses pseudo-transparency
; enable pseudo transparency
; will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
tray-transparent = false

; background color for the tray container 
; argb color (e.g. #f00, #ff992a, #ddff1023)
; by default the tray container will use the bar
; background color.
tray-background = ${root.background}

; tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; pad the sides of each tray icon
tray-padding = 0

; scale factor for tray clients
tray-scale = 1.0

; restack the bar window and put it above the
; selected window manager's root
;
; fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; currently supported wm's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
; wm-restack =

; set a dpi values used when rendering text
; this only affects scalable fonts
; dpi = 

; enable support for inter-process messaging
; see the messaging wiki page for more details.
enable-ipc = true

; fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

; requires polybar to be built with xcursor support (xcb-util-cursor)
; possible values are:
; - default   : the default pointer as before, can also be an empty string (default)
; - pointer   : typically in the form of a hand
; - ns-resize : up and down arrows, can be used to indicate scrolling
cursor-click = 
cursor-scroll = 

;; wm workspace specific

; bspwm
;;scroll-up = bspwm-desknext
;;scroll-down = bspwm-deskprev
;;scroll-up = bspc desktop -f prev.local
;;scroll-down = bspc desktop -f next.local

;i3
;;scroll-up = i3wm-wsnext
;;scroll-down = i3wm-wsprev
;;scroll-up = i3-msg workspace next_on_output
;;scroll-down = i3-msg workspace prev_on_output

;openbox
;awesome
;etc


;; application settings

[settings]
; the throttle settings lets the eventloop swallow up til x events
; if they happen within y millisecond after first event was received.
; this is done to prevent flood of update event.
;
; for example if 5 modules emit an update event at the same time, we really
; just care about the last one. but if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; time in milliseconds that the input handler will wait between processing events
throttle-input-for = 30

; reload upon receiving xcb_randr_screen_change_notify events
screenchange-reload = false

; compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; define fallback values used by all module formats
format-foreground = 
format-background = 
format-underline =
format-overline =
format-spacing =
format-padding =
format-margin =
format-offset =

; enables pseudo-transparency for the bar
; if set to true the bar can be transparent without a compositor.
pseudo-transparency = false

;; colors

[color]
;; active colors
bg = #494949
bg-alt = #333333
fg-ac = #536579
fg = #eaeaea
fg-alt = #9c9c9c
ac = #000000

trans = #00000000
white = #ffffff
black = #000000

;; material colors

red = #e53935
pink = #d81b60
purple = #8e24aa
deep-purple = #5e35b1
indigo = #3949ab
blue = #1e88e5
light-blue = #039be5
cyan = #00acc1
teal = #00897b
green = #43a047
light-green = #7cb342
lime = #c0ca33
yellow = #fdd835
amber = #ffb300
orange = #fb8c00
deep-orange = #f4511e
brown = #6d4c41
grey = #757575
blue-gray = #546e7a

;; modules

[module/xmonad]
type = custom/script
exec = xmonad-log


[module/polywins]
type = custom/script
exec = ~/.config/polybar/scripts/polywins.sh 2>/dev/null
format = <label>
label = %output%
label-padding = 1
tail = true

[module/pulseaudio]
type = internal/pulseaudio
sink = alsa_output.pci-0000_00_05.0.analog-stereo
use-ui-max = true
interval = 5
format-volume = <ramp-volume><label-volume>
format-muted = 
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 
label-volume-font = 1
format-volume-font = 4
format-muted-font = 4
;format-muted-foreground = "#8be9fd"
;format-volume-foreground = "#8be9fd"

[module/notification]
type = custom/text
content = 
click-left = kill -s USR1 $(pidof deadd-notification-center)


[module/date]
type = internal/date
interval = 60.0

date = %a %d %b % 
time = %R

format = <label>
label =  %date% %time%
;label-padding = 1
;format-prefix = 
;format-prefix-padding = 1
;format-prefix-foreground = "#8be9fd"
label-font = 1
format-prefix-font = 3


[module/workspaces]
type = internal/xworkspaces

pin-workspaces = false
enable-click = true
enable-scroll = true

format = <label-state>
format-background = ${color.bg}

label-active = 
label-urgent = 
label-occupied = 
label-empty = 
icon-default = 

label-empty-padding = 1
label-active-padding = 1
label-urgent-padding = 1
label-occupied-padding = 1

label-empty-foreground = ${color.bg-alt}
label-active-foreground = ${color.fg-ac}
label-urgent-foreground = ${color.red}
label-occupied-foreground = ${color.bg-alt}

label-empty-background = ${color.bg-alt}
label-active-background = ${color.fg-ac}
label-urgent-background = ${color.red}
label-occupied-background = ${color.bg-alt}

[module/title]
type = internal/xwindow
format = <label>
label = %title%
label-maxlen = 100
